# Docker Compose for FlowTracker - Development Environment
version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: flowtracker-db
    environment:
      POSTGRES_USER: flowtracker
      POSTGRES_PASSWORD: flowtracker_dev_password
      POSTGRES_DB: flowtracker
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flowtracker"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - flowtracker-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    container_name: flowtracker-backend
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://flowtracker:flowtracker_dev_password@database:5432/flowtracker
      JWT_SECRET: dev_jwt_secret_change_in_production
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:3000
      FRONTEND_URL: http://localhost:3000
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-your_email@gmail.com}
      SMTP_PASS: ${SMTP_PASS:-your_app_password}
      FROM_EMAIL: ${FROM_EMAIL:-noreply@flowtracker.com}
      UPLOAD_DIR: /app/uploads
      MAX_FILE_SIZE: 10485760
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    volumes:
      - ./backend/src:/app/src:ro
      - ./backend/uploads:/app/uploads
      - backend_node_modules:/app/node_modules
    ports:
      - "5000:5000"
    depends_on:
      database:
        condition: service_healthy
    command: npm run dev
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - flowtracker-network

  # Frontend (Development Server)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: flowtracker-frontend
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:5000/api
    volumes:
      - ./src:/app/src:ro
      - ./public:/app/public:ro
      - ./index.html:/app/index.html:ro
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0 --port 3000
    networks:
      - flowtracker-network

volumes:
  postgres_data:
    driver: local
  backend_node_modules:
    driver: local
  frontend_node_modules:
    driver: local

networks:
  flowtracker-network:
    driver: bridge

