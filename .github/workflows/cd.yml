name: CD - Continuous Deployment

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    outputs:
      version: ${{ steps.meta.outputs.version }}
      frontend-image: ${{ steps.meta.outputs.frontend-image }}
      backend-image: ${{ steps.meta.outputs.backend-image }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        run: |
          VERSION=$(echo "${{ github.sha }}" | cut -c1-7)
          REPO_LOWER=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "frontend-image=ghcr.io/${REPO_LOWER}/flowtracker-frontend" >> $GITHUB_OUTPUT
          echo "backend-image=ghcr.io/${REPO_LOWER}/flowtracker-backend" >> $GITHUB_OUTPUT

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.frontend-image }}:latest
            ${{ steps.meta.outputs.frontend-image }}:${{ steps.meta.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.backend-image }}:latest
            ${{ steps.meta.outputs.backend-image }}:${{ steps.meta.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Image digest
        run: |
          echo "Frontend image: ${{ steps.meta.outputs.frontend-image }}:${{ steps.meta.outputs.version }}"
          echo "Backend image: ${{ steps.meta.outputs.backend-image }}:${{ steps.meta.outputs.version }}"

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' || github.event.inputs.environment == 'staging'
    environment:
      name: staging
      url: https://staging.flowtracker.app
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Uncomment and configure when you have a staging server
      # - name: Deploy to staging server
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.STAGING_HOST }}
      #     username: ${{ secrets.STAGING_USER }}
      #     key: ${{ secrets.STAGING_SSH_KEY }}
      #     script: |
      #       cd /opt/flowtracker
      #       echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      #       docker-compose pull
      #       docker-compose up -d
      #       docker-compose exec -T backend npm run migrate
      #       docker image prune -f

      - name: Deployment notification
        run: |
          echo "üöÄ Staging deployment triggered"
          echo "Frontend: ${{ needs.build-and-push.outputs.frontend-image }}:${{ needs.build-and-push.outputs.version }}"
          echo "Backend: ${{ needs.build-and-push.outputs.backend-image }}:${{ needs.build-and-push.outputs.version }}"
          echo ""
          echo "To deploy to your server, configure the SSH secrets and uncomment the deployment step."

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event.inputs.environment == 'production'
    environment:
      name: production
      url: https://flowtracker.app
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify production deployment
        run: |
          echo "‚ö†Ô∏è  PRODUCTION DEPLOYMENT"
          echo "This will deploy to production. Make sure you've tested in staging first."

      # Uncomment and configure when ready for production deployments
      # - name: Deploy to production server
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.PRODUCTION_HOST }}
      #     username: ${{ secrets.PRODUCTION_USER }}
      #     key: ${{ secrets.PRODUCTION_SSH_KEY }}
      #     script: |
      #       cd /opt/flowtracker
      #       echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      #       docker-compose -f docker-compose.prod.yml pull
      #       docker-compose -f docker-compose.prod.yml up -d
      #       docker-compose -f docker-compose.prod.yml exec -T backend npm run migrate
      #       docker image prune -f

      - name: Production deployment notification
        run: |
          echo "üéâ Production deployment triggered"
          echo "Frontend: ${{ needs.build-and-push.outputs.frontend-image }}:${{ needs.build-and-push.outputs.version }}"
          echo "Backend: ${{ needs.build-and-push.outputs.backend-image }}:${{ needs.build-and-push.outputs.version }}"

